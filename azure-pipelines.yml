trigger: 
 - master

pool:
  vmImage: ubuntu-latest

jobs:
- job: AssessNodeGoat
  displayName: 'Assess NodeGoat'
  steps:
    - checkout: self
    - task: RenovateMe@0
      inputs:
       renovateOptionsVersion: 'latest'
    - task: Bash@3
      displayName: 'Run Checkov Test'
      inputs:
        targetType: 'inline'
        failOnStderr: false
        script: |
          cd $(System.DefaultWorkingDirectory)
          pwd
          mkdir Reports
          docker pull bridgecrew/checkov
          docker run \
          --volume $(pwd):/tf bridgecrew/checkov \
          --directory /tf \
          --skip-check CKV_DOCKER* \
          --output junitxml \
          --soft-fail > $(pwd)/Reports/Checkov-Report.xml
    - task: PublishTestResults@2
      displayName: 'Publish Checkov scan results'
      inputs:
        testRunTitle: "Checkov Results"
        failTaskOnFailedTests: true
        testResultsFormat: "JUnit"
        testResultsFiles: "Checkov-Report.xml"
        searchFolder: "$(System.DefaultWorkingDirectory)/Reports"
  
    - task: Bash@3
      displayName: 'Run AppThreat SAST-Scan'
      inputs:
        targetType: 'inline'
        failOnStderr: false
        script: |
          cd $(System.DefaultWorkingDirectory)
          pwd
          docker run --rm -e "WORKSPACE=${PWD}" \
          -v "$PWD:/app:cached" quay.io/appthreat/sast-scan scan \
          --src /app \
          --type nodejs,credscan,yaml --out_dir ${pwd}/Reports
          ls $(pwd)/Reports
    - task: PublishTestResults@2
      displayName: 'Publish AppThreat results'
      inputs:
        testRunTitle: "AppThreat Results"
        failTaskOnFailedTests: false
        testResultsFiles: "*.json"
        searchFolder: "$(pwd)/Reports"
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
